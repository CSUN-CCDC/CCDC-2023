---
- name: Generate random password
  ansible.builtin.set_fact:
    new_password: "{{ lookup('community.general.random_string', length=12, special=false) }}"
- name: Check if item in dictionary
  ansible.builtin.debug:
    msg: "{{ keycloak_userpass_dict.get(userinfo.username, new_password) }}"
- name: Change password of {{ userinfo.username }} for realm {{ item.get('realm') }}
  community.general.keycloak_user:
    auth_keycloak_url: "{{ keycloak_tls }}://{{ keycloak_server }}/"
    auth_username: "{{ keycloak_user }}"
    auth_password: "{{ keycloak_password }}"
    auth_realm: "{{ keycloak_admin_realm }}"
    realm: "{{ item.get('realm') }}"
    username: "{{ userinfo.username }}"
    credentials:
      - type: password
        value: "{{ keycloak_userpass_dict.get(userinfo.username, new_password) }}"
        temporary: false
    force: true # Does this delete existing data like attributes, name, and email?
    state: present
- name: Create new dict for user
  ansible.builtin.set_fact:
    keycloak_temp_dict:
      - key: "{{ userinfo.username }}"
        value: "{{ new_password }}"
- name: Export password to dict
  when: not keycloak_userpass_dict.get(userinfo.username, False)
  ansible.builtin.set_fact:
    keycloak_userpass_dict: "{{ keycloak_userpass_dict | combine( keycloak_temp_dict | items2dict ) }}"
- name: Export password changes to CSV
  ansible.builtin.lineinfile:
    path: "/tmp/{{ keycloakpasswords }}"
    line: "{{ userinfo.username }},{{ keycloak_userpass_dict.get(userinfo.username, new_password) }}"