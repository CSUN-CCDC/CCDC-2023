---
- name: Generate random password for {{ item.name }}
  when: item.name != mysql_user
  ansible.builtin.set_fact:
    # Specials is false here to ensure maximum compatibility with scoring engine.
    new_password: "{{ lookup('community.general.random_string', length=12, special=false) }}"
    # new_password_hashed: ""

- name: Change password of user {{ item.name }}
  when: item.name != mysql_user
  community.mysql.mysql_user:
    login_user: "{{ mysql_user }}"
    login_password: "{{ mysql_password }}"
    login_host: "{{ mysql_host }}"
    login_port: "{{ mysql_port }}"
    host_all: true
    name: "{{ item.name }}"
    password: "{{ new_password }}"
    state: present
# Delegate to localhost to avoid plaintext passwords from getting out.
# Or store in a hard to find file in /tmp

- name: Export password of {{ item.name }}
  when: item.name != mysql_user
  ansible.builtin.lineinfile:
    path: "/tmp/{{ sqlpasswordsfile }}"
    line: "{{ item.name }},{{ new_password }}"
