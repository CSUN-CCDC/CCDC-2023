---

# Needs python-firewall on the "host that executes the module" Whicch is that?

- name: Lockdown to only control node ip address
  when: firewalld_lockdown
  become: true
  block:
    - name: Set firewalld active zone
      ansible.posix.firewalld:
        zone: public
        state: enabled
        immediate: true
        permanent: true
    - name: Print control node ip address
      ansible.builtin.debug:
        var: control_node_ip
    - name: Only allow control_node_ip
      ansible.posix.firewalld:
        source: "{{ control_node_ip }}"
        zone: trusted
        permanent: true
        state: enabled
    - name: Get firewalld services
      ansible.builtin.command: firewall-cmd --list-services
      register: firewalld_enabled_services
      changed_when: false
    - name: Delete all existing firewalld services
      ansible.posix.firewalld:
        zone: public
        service: "{{ item }}"
        state: disabled
        permanent: true
      loop: "{{ firewalld_enabled_services.stdout.split(' ') | reject('search', 'dhcpv6-client') | list }}"
    - name: Get firewall-cmd open ports
      ansible.builtin.command: firewall-cmd --list-ports
      register: firewalld_ports
      changed_when: false
    - name: Delete existing firewalld ports
      when: firewalld_ports.stdout is defined and firewalld_ports.stdout | length > 0
      ansible.posix.firewalld:
        zone: public
        port: "{{ item }}"
        state: disabled
        permanent: true
      loop: "{{ firewalld_ports.stdout.split(' ') }}"
    - name: Reload firewalld service
      ansible.builtin.service:
        name: firewalld
        state: restarted

- name: Firewalld open ports
  when: firewalld_open_ports | length > 0 # Since firewalld_open_ports is a list, this checks if this list is non-empty
  become: true
  block:
    - name: Firewalld open ports
      ansible.posix.firewalld:
        port: "{{ item }}"
        state: enabled
        permanent: true
      loop: "{{ firewalld_open_ports }}"
    - name: Reload firewalld service
      ansible.builtin.service:
        name: firewalld
        state: restarted

- name: Enable firewalld services
  when: firewalld_services | length > 0
  become: true
  block:
    - name: Firewalld open services
      ansible.posix.firewalld:
        service: "{{ item }}"
        state: enabled
        permanent: true
      loop: "{{ firewalld_services }}"
    - name: Restart firewalld
      ansible.builtin.service:
        name: firewalld
        state: restarted

